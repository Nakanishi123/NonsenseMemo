---
import type { GetStaticPathsOptions } from "astro";
import { getCollection } from "astro:content";
import Pagination from "../../../components/Pagination.astro";
import PostList from "../../../components/PostList.astro";
import { POSTS_PER_PAGE, URL_BASE } from "../../../consts";
import BaseLayout from "../../../layouts/BaseLayout.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = (await getCollection("memo")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  const uniqueTags = [...new Set(allPosts.map(post => post.data.tags).flatMap(tag => tag ?? []))];
  return uniqueTags.flatMap(tag => {
    const filteredPosts = allPosts.filter(post => post.data.tags?.includes(tag));
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: POSTS_PER_PAGE,
    });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
---

<BaseLayout title={`${tag} ${page.currentPage}ページ`} description=`${tag} ${page.currentPage}ページです`>
  <h3 class="mb-5 text-center text-4xl font-bold text-primary">{`${tag}`}</h3>
  <PostList posts={page.data} />
  <div class="mt-5 flex justify-center">
    <Pagination page={page} url={`${URL_BASE}/tag/${tag}/`} />
  </div>
</BaseLayout>
